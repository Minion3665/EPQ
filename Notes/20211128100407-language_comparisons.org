:PROPERTIES:
:ID:       3f64a1d4-b52d-4b7f-9a25-d2ebf1587810
:END:
#+title: Language comparisons
In order to decide what language I should use, I'm going to be using a few different metrics. These are based on what I think will be most important for this project.

I'm just going to be comparing 'Javascript', 'Python' and 'Go' for this, as those are the only langauges which I'm considering at this point. For surveyed results I'm going to be looking at all javascript, as javascript is normally fairly cross-compatible. For non-surveyed results (for example those I benchmark myself) I'm going to be using node 16, as that's what would be used in the project were it written in javascript. Similarly, for python I'll be using python3.10 in my own research.

* Popularity
Language popularity & growth is an important metric for 3 reasons.

Firstly, a language that is experiencing growth is more likely to have support given for questions. If there's a lot of people using and learning this language, there'll likely be better communities and resources to learn the language.

Secondly, a language that is experiencing growth is more likely to have libraries made for it. For similar reasons to point 1, languages that are popular are likely to have good standard tools for doing simple and complex stuff, whereas backwater langauges are more likely not to have the same tools.

Finally, if a langauge is growing in popularity this is probably because either there are very good features to the language or because there's a reasonable demand for people who can write the langauge (/and that can be because the language has features that are useful for solving certain problems easily/). This is a good reason to use the language, as people may enjoy using it.

For this, I've looked at [[https://insights.stackoverflow.com/survey][the stackoverflow developer survey results]] for the years [[https://insights.stackoverflow.com/survey/2021][2021]], [[https://insights.stackoverflow.com/survey/2020][2020]] and [[https://insights.stackoverflow.com/survey/2019][2019]]. This is fairly reliable, as stackoverflow is a huge community of developers so any outliers are unlikely to skew the wider dataset very much. While they don't necessarily represent /everyone/, they provide a good starting point for what many developers use, and give a good representation of what /stackoverflow's users/ use which may be very important for getting help on problems I face.
** Langauge usage and growth over the past few years:
Over the past 3 years, usage of Go has risen from 8.2% to 9.55% of total developers, and its percentage growth was fairly even in both years[cite:@so_dev_survey_2021;@so_dev_survey_2020;@so_dev_survey_2019]. This still puts it at under 10% of usage with both Python and Javascript breaking 40% of usage in every year sampled[cite:@so_dev_survey_2021;@so_dev_survey_2020;@so_dev_survey_2019]. It's clear therefore that go is used a lot less than python and javascript.

While go's usage has increased, however, javascript's has started to fall, remaining fairly similar in 2019 and 2020 ($\approx$67.8%) before dropping in 2021 to 64.96%. There is not yet enough information to know if this trend will continue.

Python's usage is increasing, and faster even than go. In 2019, 41.7% of developers had used it, placing it in 4th, but it has increased by a few percent per year and in the years surveyed its growth rate inreased. It's now the 3rd language, growing by over 4% of total usage in the last year.

This metric places javascript in the best position, as it's a giant with a significant amount of investment in it. In terms of fastest growth, python could be a good choice. All in all, go is severely lagging behind.

** Language desirability according to developers
If developers love a language, it's probably ok. I therefore looked at the metrics for [[https://insights.stackoverflow.com/survey/2021#section-most-loved-dreaded-and-wanted-programming-scripting-and-markup-languages]['loved and dreaded']] as well as [[https://insights.stackoverflow.com/survey/2021#most-loved-dreaded-and-wanted-language-want][desired]] langauges for 2021 only. I decided not to look at the data for past years, as it doesn't matter to me if people have consistently loved the language or if new features have been introduced that makes it amazing to use now.

The good news is that for all of the languages I've chosen as candidates, over half of their developers like to use them. Javascript as a whole sits lowest, with around 62% of its developers loving it, but typescript and nodejs both increase this firgure, with 63% and 73% of their developers loving them respectively. Go sits around the same point as nodejs with 63% and python sits in the middle of nodejs and typescript with 68%. This shows that all of the languages are fairly reasonable to work with and that a majority of their developer communities consider them good langauges to use.

On the desired list, python sits at the top, followed by typescript and then javascript[cite:@so_dev_survey_2021], go is 4th. This shows that all of them may experience further growth from developers choosing to work with them in future. Python is the only language with a far greater percentage than any others, sitting at around 19%, while typescript, javascript and go all hover around 15%.

This metric places python in the best position, although a mention can go out to javascript, and specifically typescript as it is counted as a separate language on the loved/dreaded survey and scores incredibly highly, so it could be argued that it should be recognized as the winner here and better than python.
** Popularity conclusion
Overall, python wins this one. It's growing extremely fast and is very popular with people who use it. Javascript and derivatives come second, with an extremely high portion of developers using them and very high satisfaction for 'typescript' (typed javascript) in particular. Go comes last, although with results that still shouldn't be sniffed at. All 3 of these languages would be viable results.
* My current experience
My current experience and what I want for the future of Clicks Minute Per must play a part in deciding the lanaguage used. It'd generally be a bad idea to use lua, for example, as it's a language which I have little experience in but dislike, and is not particularly useful for anything else in Clicks.
** My prior usage of these langauges
I have experience using javascript and python, and no experience with go. Both javascript and python have been languages I've ultimately had good experiences with, and despite a shaky start with typescript I'm currently using it in a different project. This means that at the start I'm a lot more likely to know how to use these langauges than go.
** The future of Clicks
Clicks is moving away from using python in our bots, after 
** Experience conclusion
* Tool availablility
* Benchmarks
